"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[825],{8375:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates an uncompleted future.","params":[],"returns":[{"desc":"","lua_type":"Future<T...>"}],"function_type":"static","tags":["Constructors"],"source":{"line":33,"path":"src/init.luau"}},{"name":"completed","desc":"Creates a completed future.","params":[{"name":"...","desc":"The completed values.","lua_type":"T..."}],"returns":[{"desc":"","lua_type":"Future<T...>"}],"function_type":"static","tags":["Constructors"],"source":{"line":51,"path":"src/init.luau"}},{"name":"delay","desc":"Creates a future and completes with the provided values after `sec` seconds.","params":[{"name":"sec","desc":"How long to delay until the future completes.","lua_type":"number"},{"name":"...","desc":"The completed values.","lua_type":"T..."}],"returns":[{"desc":"","lua_type":"Future<T...>"}],"function_type":"static","tags":["Constructors"],"source":{"line":67,"path":"src/init.luau"}},{"name":"race","desc":"Creates a new future that completes with the values from the first future to complete in the provided array.","params":[{"name":"futures","desc":"","lua_type":"{ Future<T...> }"}],"returns":[{"desc":"","lua_type":"Future<T...>"}],"function_type":"static","tags":["Constructors"],"source":{"line":82,"path":"src/init.luau"}},{"name":"isCompleted","desc":"Returns whether the future has been completed or not.","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","tags":["Methods"],"source":{"line":122,"path":"src/init.luau"}},{"name":"complete","desc":"Completes the future with the provided values.\\n\\nThis method will error if the future has already been completed.","params":[{"name":"...","desc":"The completed values.","lua_type":"T..."}],"returns":[],"function_type":"method","tags":["Methods"],"source":{"line":137,"path":"src/init.luau"}},{"name":"expect","desc":"Yields until the future is complete and returns the completed values.","params":[],"returns":[{"desc":"The completed values.","lua_type":"T..."}],"function_type":"method","tags":["Methods"],"source":{"line":161,"path":"src/init.luau"}}],"properties":[],"types":[],"name":"Future","desc":"A simple future class used as an abstraction for defining eventual values that result from asynchronous computations.","source":{"line":8,"path":"src/init.luau"}}')}}]);